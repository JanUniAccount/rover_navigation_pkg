<?xml version="1.0"?>
<!-- ################################################## -->
<!-- GAZEBO ADDITIONAL DESCRIPTION OF THE MARS ROVER    -->
<!-- Made by Jan Slusarski                              -->
<!-- March 2024                                         -->
<!-- ################################################## -->
<robot>
<!-- Everything is described here -->
<!-- http://classic.gazebosim.org/tutorials?tut=ros_urdf&cat=connect_ros -->
<!-- mu1 and mu2 are friction coefficients -->

<gazebo reference="body_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Red</material>
</gazebo>

<gazebo reference="susRight_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Red</material>
</gazebo>

<gazebo reference="susLeft_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Red</material>
</gazebo>

<gazebo reference="wheel1_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel2_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel3_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel4_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel5_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

<gazebo reference="wheel6_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>

 <gazebo reference="laser_frame">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.8</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="laser_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>

<!-- Controller for the Mars Rover wheels -->
<gazebo>
	<plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
	    <!-- Control update rate in Hz -->
	    <updateRate>100.0</updateRate>
	    <!-- Leave this empty, otherwise there will be problems with sending control commands -->
	    <robotNamespace> </robotNamespace>
	    <!-- Robot kinematics -->
	    <leftFrontJoint>wheel4_joint</leftFrontJoint>
	    <rightFrontJoint>wheel3_joint</rightFrontJoint>
		<leftFrontJoint>wheel5_joint</leftFrontJoint>
	    <rightFrontJoint>wheel6_joint</rightFrontJoint>
	    <leftRearJoint>wheel2_joint</leftRearJoint>
	    <rightRearJoint>wheel1_joint</rightRearJoint>
	    <wheelSeparation>${body_link_y_dim+wheel_link_length}</wheelSeparation>
	    <wheelDiameter>${2*wheel_link_radius}</wheelDiameter>

	    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
	    <torque>1000</torque>

	    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to 'cmd_vel' -->
	    <commandTopic>cmd_vel</commandTopic>
	    <!-- Topic to publish nav_msgs/Odometry messages, defaults to 'odom' -->
	    <odometryTopic>odom</odometryTopic>
	    <!-- Odometry frame, defaults to 'odom' -->
	    <odometryFrame>odom</odometryFrame>
	    <!-- Robot frame to calculate odometry from, defaults to 'base_footprint' -->
	    <robotBaseFrame>body_link</robotBaseFrame>
	    <!-- Set true to publish transforms for the wheel links, defaults to false -->
	    <publishWheelTF>true</publishWheelTF>
	    <!-- Set true to publish transforms for the odometry, defaults to true -->
	    <publishOdom>true</publishOdom>
	    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults 	    to false -->
	    <publishWheelJointState>true</publishWheelJointState>
	    <!-- This part is required by Gazebo -->
	    <covariance_x>0.0001</covariance_x>
	    <covariance_y>0.0001</covariance_y>
	    <covariance_yaw>0.01</covariance_yaw>
	</plugin>
</gazebo>

</robot>
